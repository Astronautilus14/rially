// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  username  String  @unique
  discordId String? @unique
  name      String  @default("Unknwown")
  password  String?
  Team      Team?   @relation(fields: [teamId], references: [id], onDelete: SetNull)
  teamId    Int?
}

model Team {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  Users       User[]
  isCommittee Boolean      @default(false)
  channelId   String?
  roleId      String?
  Submissions Submission[]
}

enum submissionType {
  PUZZLE
  CHALLENGE
  CRAZY88
}

model Submission {
  id            Int            @id @default(autoincrement())
  Team          Team           @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId        Int
  fileLink      String         @db.VarChar(275) // A file link can be longer than the default 191 character limit
  isFunny       Boolean        @default(false)
  timeSubmitted DateTime       @default(now())
  grading       Int?
  type          submissionType

  PuzzleSubmission    PuzzleSubmission?
  ChallengeSubmission ChallengeSubmission?
  Crazy88Submission   Crazy88Submission?
}

model PuzzleSubmission {
  id       Int @id @default(autoincrement())
  location Int

  Submission   Submission @relation(fields: [submissionId], references: [id], onDelete: Cascade)
  submissionId Int        @unique
}

model ChallengeSubmission {
  id       Int @id @default(autoincrement())
  location Int
  number   Int

  Submission   Submission @relation(fields: [submissionId], references: [id], onDelete: Cascade)
  submissionId Int        @unique
}

model Crazy88Submission {
  id     Int @id @default(autoincrement())
  number Int

  Submission   Submission @relation(fields: [submissionId], references: [id], onDelete: Cascade)
  submissionId Int        @unique
}

model Variables {
  key   String  @id
  value String?
}
